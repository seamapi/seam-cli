name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18"
          registry-url: https://registry.npmjs.org/

      - name: Install dependencies
        run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}

      - name: Install ldid
        run: |
          sudo apt-get update
          sudo apt-get install -y libssl-dev libplist-dev=2.2.0-3
          git clone https://github.com/sbingner/ldid.git
          make -C ldid
          sudo cp -f ./ldid/ldid /usr/local/bin/

      - name: Build the project
        run: npm run build

      - name: Build binaries with pkg
        run: npm run build:binaries

      - name: Install jq
        run: sudo apt-get install jq

      - name: Install pver and create new release
        run: |
          npm install -g pver
          pver release
        env:
          NODE_AUTH_TOKEN: ${{ secrets.SEAMAPI_NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.BOT_GH_TOKEN }}

      - name: Get the version from package.json
        run: |
          export VERSION_TAG=$(jq -r '.version' package.json)
          echo "VERSION_TAG=$VERSION_TAG" >> $GITHUB_ENV
          echo "RELEASING VERSION $VERSION_TAG"

      - name: Create Release
        id: create_release
        if: github.ref == 'refs/heads/main'
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.VERSION_TAG }}
          release_name: v${{ env.VERSION_TAG }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Linux Binary (x64)
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/seam-linux-x64
          asset_name: seam-linux-x64-${{ env.VERSION_TAG }}
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload MacOS Binary (x64)
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/seam-macos-x64
          asset_name: seam-macos-x64-${{ env.VERSION_TAG }}
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload MacOS Binary (arm64)
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/seam-macos-arm64
          asset_name: seam-macos-arm64-${{ env.VERSION_TAG }}
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload Windows Binary (x64)
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/seam-win-x64.exe
          asset_name: seam-win-x64-${{ env.VERSION_TAG }}
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
